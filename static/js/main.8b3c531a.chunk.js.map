{"version":3,"sources":["components/Header.js","axios.js","store/actions.js","store/actionCreators/summary.js","constants/apiEndpoints.js","components/GlobalSummary.js","components/CountrySummary.js","components/Content.js","App.js","reportWebVitals.js","store/reducers/summary.js","index.js","store/store.js"],"names":["Header","className","instance","axios","create","baseURL","SET_SUMMARY","getSummaryDetails","dispatch","get","then","data","global","Global","countries","Countries","type","actions","payload","setSummaryDetails","catch","console","error","getSummaryTitle","key","secondWordStartIndex","Array","from","slice","findIndex","item","toUpperCase","SummaryItem","title","count","GlobalSummary","Object","keys","map","_item","_index","CountrySummaryItem","Country","NewConfirmed","NewDeaths","NewRecovered","TotalConfirmed","TotalDeaths","TotalRecovered","onClick","CountrySummaryTable","CountryDetailsItem","heading","subheading","CountryDetailsCategory","totalCases","newCases","CountryDetails","CountrySummary","useState","search","handleSearch","details","handleDetails","placeholder","onChange","e","target","value","filter","includes","connect","state","summary","bindActionCreators","getSummaryDetailsAction","useCallback","useEffect","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","action","ReactDOM","render","StrictMode","store","reducer","combineReducers","createStore","applyMiddleware","logger","thunkMiddileware","createStoreObject","document","getElementById"],"mappings":"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","file":"static/js/main.8b3c531a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className=\"app-header\">\r\n            <div>COVID PORTAL</div>\r\n        </div>\r\n    )\r\n}\r\nexport default Header;","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://api.covid19api.com',\r\n});\r\n\r\nexport default instance;","export const SET_SUMMARY = 'SET_SUMMARY';\r\nexport const SET_USER_DETAILS = 'SET_USER_DETAILS';","import axios from '../../axios';\r\nimport * as apiEndpoints from '../../constants/apiEndpoints';\r\nimport * as actions from '../actions';\r\n\r\nconst setSummaryDetails = ({ global, countries }) => ({\r\n    type: actions.SET_SUMMARY,\r\n    payload: { global, countries }\r\n})\r\n\r\nexport function getSummaryDetails() {\r\n    return (dispatch) => {\r\n        axios.get(apiEndpoints.summary)\r\n            .then(({ data: { Global: global, Countries: countries } }) => {\r\n                dispatch(setSummaryDetails({ global, countries }))\r\n            })\r\n            .catch(console.error)\r\n    }\r\n}","export const summary = '/summary';","import React from 'react';\r\n\r\nconst getSummaryTitle = (key) => {\r\n    const secondWordStartIndex = Array.from(key.slice(1)).findIndex(item => (item.toUpperCase() === item));\r\n    return `${key.slice(0, secondWordStartIndex + 1)} ${key.slice(secondWordStartIndex + 1)}`\r\n}\r\n\r\nfunction SummaryItem({ title, count }) {\r\n    return (\r\n        <div className=\"app-global-summary-item\">\r\n            <span className=\"count\">{count}</span>\r\n            <span className=\"title\">{title}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction GlobalSummary({ data }) {\r\n    return (\r\n        <div className=\"app-global-summary\">\r\n            {\r\n                Object.keys(data).map((_item, _index) => <SummaryItem key={_index} title={getSummaryTitle(_item)} count={data[_item]} />)\r\n            }\r\n        </div>\r\n    );\r\n}\r\nexport default GlobalSummary;\r\n","import React, { useState } from 'react';\r\n\r\nfunction CountrySummaryItem({ Country, NewConfirmed, NewDeaths, NewRecovered, TotalConfirmed, TotalDeaths, TotalRecovered, onClick }) {\r\n    return (\r\n        <div className=\"app-country-summary-country-item\" onClick={onClick}>\r\n            <span>{Country}</span>\r\n            <span>{`${TotalConfirmed} (${NewConfirmed})`}</span>\r\n            <span>{`${TotalDeaths} (${NewDeaths})`}</span>\r\n            <span>{`${TotalRecovered} (${NewRecovered})`}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction CountrySummaryTable({ data, onClick }) {\r\n    return (\r\n        <div className=\"app-country-summary-table\">\r\n            <div className=\"app-country-summary-table-heading\">\r\n                <div>Country</div>\r\n                <div>Confirmed</div>\r\n                <div>Death</div>\r\n                <div>Recovered</div>\r\n            </div>\r\n            <div className=\"app-country-summary-table-data\">\r\n                {\r\n                    data.map((_item, _index) => (<CountrySummaryItem key={_index} {..._item} onClick={() => { onClick(_item) }} />))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction CountryDetailsItem({ heading, subheading }) {\r\n    return (\r\n        <div className=\"app-country-summary-details-item\">\r\n            <span className=\"heading\">{heading}</span>\r\n            <span className=\"subheading\">{subheading}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction CountryDetailsCategory({ title, totalCases, newCases }) {\r\n    return (\r\n        <div className=\"app-country-summary-details-category\">\r\n            <CountryDetailsItem heading={title} />\r\n            <CountryDetailsItem heading={newCases} subheading=\"New\" />\r\n            <CountryDetailsItem heading={totalCases} subheading=\"Total\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction CountryDetails({ Country, NewConfirmed, NewDeaths, NewRecovered, TotalConfirmed, TotalDeaths, TotalRecovered }) {\r\n    return (\r\n        <div className=\"app-country-summary-details\">\r\n            <div className=\"country-name\"><CountryDetailsItem heading={Country} /></div>\r\n            <CountryDetailsCategory title=\"Confirmed\" totalCases={TotalConfirmed} newCases={NewConfirmed} />\r\n            <CountryDetailsCategory title=\"Deaths\" totalCases={TotalDeaths} newCases={NewDeaths} />\r\n            <CountryDetailsCategory title=\"Recovered\" totalCases={TotalRecovered} newCases={NewRecovered} />\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction CountrySummary({ data }) {\r\n    const [search, handleSearch] = useState('');\r\n    const [details, handleDetails] = useState(null);\r\n    return (\r\n        <div className=\"app-country-summary\">\r\n            <h2 className=\"app-country-summary-heading\">\r\n                <span>Country Wise Summary</span>\r\n                <input placeholder=\"Search Country\" onChange={(e) => { handleSearch(e.target.value); }} />\r\n            </h2>\r\n            <div className=\"app-country-summary-content\">\r\n                <CountrySummaryTable data={data.filter(_item => (_item.Country.includes(search)))} onClick={(_item) => { handleDetails(_item) }} />\r\n                {details && <CountryDetails {...details} />}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default CountrySummary;\r\n","import React, { useEffect, useCallback } from 'react';\r\n\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { getSummaryDetails } from '../store/actionCreators/summary';\r\n\r\nimport GlobalSummary from './GlobalSummary';\r\nimport CountrySummary from './CountrySummary';\r\n\r\nfunction Content({ getSummaryDetails, summary }) {\r\n\r\n    const getSummaryDetailsAction = useCallback(getSummaryDetails, [getSummaryDetails]);\r\n\r\n    useEffect(() => {\r\n        getSummaryDetailsAction();\r\n    }, [getSummaryDetailsAction])\r\n\r\n    return (\r\n        <div className=\"app-content\">\r\n            <GlobalSummary data={summary.global} />\r\n            <CountrySummary data={summary.countries} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    summary: state.summary\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n    getSummaryDetails\r\n}, dispatch)\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Content);\r\n","import React from 'react';\n\nimport Header from './components/Header';\nimport Content from './components/Content';\n\nimport './App.scss'\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <Content />\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as actions from '../actions';\r\n\r\nconst initialState = {\r\n    global: {},\r\n    countries: []\r\n}\r\n\r\nexport function summary(state = initialState, action) {\r\n    switch (action.type) {\r\n        case actions.SET_SUMMARY: return {\r\n            ...state,\r\n            global: { ...action.payload.global },\r\n            countries: [...action.payload.countries]\r\n        }\r\n        default: return state;\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { createStoreObject } from './store/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={createStoreObject()}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunkMiddileware from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\n\r\nimport { summary } from './reducers/summary';\r\n\r\nexport function createStoreObject() {\r\n    const reducer = combineReducers({\r\n        summary\r\n    });\r\n    return createStore(reducer, applyMiddleware(logger, thunkMiddileware))\r\n}"],"sourceRoot":""}